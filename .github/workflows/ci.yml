name: ci

on: [push]

jobs:
  build_node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: '12.x'
      - run: npm i -g yarn
      - run: yarn set version berry
      - run: yarn config set checksumBehavior ignore
      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ./.yarn
          key: ${{ runner.os }}-yarn3-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn3-
      - run: yarn install
        env:
          CI: true
      - run: yarn build
        env:
          CI: true
      - run: yarn lint
        env:
          CI: true
      - run: yarn test --ci --coverage --maxWorkers=2
        env:
          CI: true
  build_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: '12.x'
      - run: npm i -g yarn
      - name: Cache Conda
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda6-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda6-
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          mamba-version: '*'
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: upsetjs_jupyter_widget
          environment-file: environment.yml
          auto-activate-base: false
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: pytest
        shell: bash -l {0}
        run: yarn test:p:ci
      - name: Lint
        shell: bash -l {0}
        run: yarn lint:p

      - name: Build Notebooks
        shell: bash -l {0}
        run: yarn nbconvert

      - name: Create Docu
        shell: bash -l {0}
        run: yarn docs:p

      - run: |
          mkdir -p public/integrations/jupyter
          mv examples/*.html public/integrations/jupyter/
          mv public/integrations/jupyter/introduction.html public/integrations/jupyter/index.html

          mkdir -p public/api/jupyter
          mv docs/build/_static public/api/jupyter/static
          mv docs/build/*.js public/api/jupyter/
          mv docs/build/*.html public/api/jupyter/
          find . -type f -name "*.html" -print0 | xargs -0 sed -i 's/"_/"/g'

      - name: Deploy Master
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: upsetjs/actions-gh-pages@sgratzl
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: upsetjs/upsetjs.github.io
          publish_branch: master
          publish_dir: ./public
          enable_jekyll: true
          remove_path_spec: 'integrations/jupyter/,api/jupyter/'

      - if: github.ref == 'refs/heads/develop'
        # move to next directory
        run: |
          mv public public2
          mkdir -p public
          mv public2 public/next

      - name: Deploy Develop
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        uses: upsetjs/actions-gh-pages@sgratzl
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: upsetjs/upsetjs.github.io
          publish_branch: master
          publish_dir: ./public
          enable_jekyll: true
          remove_path_spec: 'next/integrations/jupyter/,next/api/jupyter/'
