name: ci

on: [push]

jobs:
  build_node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm i -g yarn
      - run: yarn set version berry
      - run: yarn config set checksumBehavior ignore
      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ./.yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --immutable
        env:
          CI: true
      - run: yarn build
        env:
          CI: true
      - run: yarn lint
        env:
          CI: true
      - run: yarn test --ci --coverage --maxWorkers=2
        env:
          CI: true
  build_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: setup pipenv
        run: |
          python -m pip install pipenv
          pipenv install --dev
      - name: pytest
        shell: pipenv run bash {0}
        run: pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: MyPy
        shell: pipenv run bash {0}
        run: mypy -p upsetjs_jupyter_widget
      - name: Black
        shell: pipenv run bash {0}
        run: black --target-version=py37 --check upsetjs_jupyter_widget
      - name: py.lint
        shell: pipenv run bash {0}
        run: pylint upsetjs_jupyter_widget

      - name: Build Notebooks
        shell: pipenv run bash {0}
        run: jupyter nbconvert examples/*.ipynb --to html
      - run: |
          mkdir -p public/jupyter
          mv examples/introduction.html public/jupyter/index.html

        # mv examples/*.html public/jupyter/
      - name: Deploy
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: upsetjs/upsetjs.github.io
          publish_branch: master
          publish_dir: ./public
          enable_jekyll: true
          keep_files: true
